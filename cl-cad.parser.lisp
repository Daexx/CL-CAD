(in-package :cl-cad)

(defun parser-line (cd)
  (set-source-rgb 1 1 1)
  (set-line-width (getf cd :weight))
  (move-to (* *scroll-units* (getf cd :x1)) 
	   (* *scroll-units* (getf cd :y1)))
  (line-to (* *scroll-units* (getf cd :x2)) 
	   (* *scroll-units* (getf cd :y2)))
  (set-dash 0 '(5 5)) ;тестирование штриховки
  (stroke))

(defun parser-circle (cd)
  (set-source-rgb 1 1 1)
  (set-line-width (getf cd :weight))
  (arc (* *scroll-units* (getf cd :x1))
       (* *scroll-units* (getf cd :y1))
       (* *scroll-units* (getf cd :radius))
       0 (* 2 pi))
  (stroke))
  
(defun parser-arc (cd)
  (set-source-rgb 1 1 1)
  (set-line-width (getf cd :weight))
  (arc (* *scroll-units* (getf cd :x1))
       (* *scroll-units* (getf cd :y1)) 
       (* *scroll-units* (getf cd :radius)) 
       (deg-to-rad (getf cd :startangle)) 
       (deg-to-rad (getf cd :endangle)))
  (stroke))

;(defun parser-continious (cd)
;  (set-source-rgb 1 1 1)
;  (set-line-width (getf cd :weight)))

;(defun parser-continious (cd)
;  (set-source-rgb 1 1 1)
;  (set-line-width (getf cd :weight)))

(defun parser-text (cd)
  (set-source-rgb 1 1 1)
  (move-to (* *scroll-units* (getf cd :x1))
	   (* *scroll-units* (getf cd :y1)))
  (set-font-size (* *scroll-units* (getf cd :height)))
  (select-font-face (getf cd :style) :normal :normal)
  (show-text (getf cd :count))
  (stroke))

(defun parser-point (cd)
  (set-source-rgb 1 1 1)
  (rectangle (- (* *scroll-units* (getf cd :x1)) 0.5)
	     (- (* *scroll-units* (getf cd :y1)) 0.5)
	     1 1)
  (fill-path))

(defun parser ()
  (dolist (cd *current-draw*)
	     (cond
	       ((equal (getf cd :title) :line) (parser-line cd))
	       ((equal (getf cd :title) :circle) (parser-circle cd))
	       ((equal (getf cd :title) :arc) (parser-arc cd))
	      ; ((equal (getf cd :title) :continious) (parser-continious cd))
	      ; ((equal (getf cd :title) :ray) (parser-ray cd))
	       ((equal (getf cd :title) :text) (parser-text cd))
	       ((equal (getf cd :title) :point) (parser-point cd))
	       )))